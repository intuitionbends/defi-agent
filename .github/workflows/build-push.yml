name: Docker image build and publish
on:
  push:

jobs:
  docker:
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read

    outputs:
      image_tag: ${{ steps.build-publish.outputs.image_tag }}
      full_image: ${{ steps.build-publish.outputs.full_image }}

    steps:
      - uses: actions/checkout@v3
      - name: Fetch full history
        run: |
          git fetch --prune --unshallow
          echo "Fetched full git history for accurate version counting"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: "amd64"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Generate version tag
        id: version
        run: |
          VERSION=$(git rev-list --count HEAD)-$(git rev-parse --short HEAD)
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          echo "Generated version tag: $VERSION"

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::674734398360:role/GitHubActionsRole
          aws-region: ap-southeast-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push image to Amazon ECR
        id: build-publish
        shell: bash
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: intuitionbends/defi-agent
          IMAGE_TAG: ${{ steps.version.outputs.VERSION }}
          DOCKERFILE_BUILD_PATH: .
          DOCKERFILE_PATH: Dockerfile
        run: |
          docker build "$DOCKERFILE_BUILD_PATH" -f "$DOCKERFILE_PATH" -t "$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
          docker push "$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
          echo "IMAGE $IMAGE_TAG is pushed to $ECR_REGISTRY/$ECR_REPOSITORY"
          echo "image_tag=$IMAGE_TAG" 
          echo "full_image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
